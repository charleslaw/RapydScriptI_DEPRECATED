#!/usr/bin/env python

import re, os
import argparse
from rapyd.compiler import parse_file, finalize_source

parser = argparse.ArgumentParser(description='Pre-Compiler for JavaScript. \
Simplifies writing JavaScript by simplifying the syntax and making it more \
human-readable as well as adding useful features from Python (classes, list \
comprehensions, proper scoping, support for multiple modules, and more).')

parser.add_argument('input', metavar='INPUT', type=file,
					help='The RapydScript file to compile')
parser.add_argument('--no-acknowledgement', dest='no_ack', action='store_true', default=False,
					help='Avoid the string stating that the file was generating using RapydScript')

args = parser.parse_args()

if __name__ == "__main__":
	orig_dir = os.getcwd()
	base_dir, orig_file = os.path.split(args.input.name)
	filename = orig_file.rsplit('.', 1)[0] # remove the extension

	if base_dir:
		os.chdir(base_dir)

	source = parse_file(orig_file)
	with open(filename + '.js', 'w') as new_file:
		new_file.write(source)
	os.chdir(orig_dir)
